---
# tasks file for pki-ca

# Generate PKI and Root CA

- name: root - create pki directory
  file:
    path: "{{ item }}"
    state: directory
  with_items:
  - "{{pki_ca_dir}}"
  - "{{pki_ca_dir}}/certs"
  - "{{pki_ca_dir}}/out"

- name: root - generate private key
  shell: "openssl genrsa -out {{pki_ca_dir}}/{{ pki_ca_root_name }}.key 4096"
  args:
    creates: "{{pki_ca_dir}}/{{ pki_ca_root_name }}.key"
  notify:
  - root - clean ca
  - root - clean certs
  - root - selfsign cert

- meta: flush_handlers

# Generate certificates

- name: client - generate private key
  shell: "openssl genrsa -out {{pki_ca_dir}}/certs/{{ item.name }}.key {{ pki_ca_key_size }}"
  args:
    creates: "{{pki_ca_dir}}/certs/{{ item.name }}.key"
  with_items: pki_ca_certs

- name: client - generate cert request
  shell: "openssl req -new -key {{pki_ca_dir}}/certs/{{ item.name }}.key -out {{pki_ca_dir}}/certs/{{ item.name }}.csr -subj '{{ item.subj }}'"
  args:
    creates: "{{pki_ca_dir}}/certs/{{ item.name }}.csr"
  with_items: pki_ca_certs

- name: client - sign cert
  shell: "openssl x509 -req -in {{pki_ca_dir}}/certs/{{ item.name }}.csr -CA {{pki_ca_dir}}/{{ pki_ca_root_name }}.pem -CAkey {{pki_ca_dir}}/{{ pki_ca_root_name }}.key -CAcreateserial -out {{pki_ca_dir}}/certs/{{ item.name }}.crt -days 500"
  args:
    creates: "{{pki_ca_dir}}/certs/{{ item.name }}.crt"
  with_items: pki_ca_certs
  notify:
  - client - pound
  - client - haproxy




